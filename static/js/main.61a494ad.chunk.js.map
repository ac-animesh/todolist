{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","text","onClick","deleteItem","key","App","state","currentItem","handleInput","bind","addItem","e","this","setState","target","value","Date","now","filteredItems","filter","preventDefault","newItem","console","log","newItems","id","onSubmit","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAoBeA,MAjBf,SAAmBC,GACjB,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACGD,EAAKE,KACN,+BACE,wBAAQC,QAAS,kBAAMP,EAAMQ,WAAWJ,EAAKK,MAA7C,qBAJqBL,EAAKK,QAWpC,OAAO,8BAAMR,KCyDAS,E,kDArEb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXT,MAAO,GACPU,YAAa,CACXN,KAAM,GACNG,IAAK,KAGT,EAAKI,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKN,WAAa,EAAKA,WAAWM,KAAhB,gBAXD,E,+CAcnB,SAAYE,GACVC,KAAKC,SAAS,CACZN,YAAa,CACXN,KAAMU,EAAEG,OAAOC,MACfX,IAAKY,KAAKC,W,wBAKhB,SAAWb,GACT,IAAMc,EAAgBN,KAAKN,MAAMT,MAAMsB,QAAO,SAACpB,GAAD,OAAUA,EAAKK,MAAQA,KACrEQ,KAAKC,SAAS,CACZhB,MAAOqB,M,qBAIX,SAAQP,GACNA,EAAES,iBACF,IAAMC,EAAUT,KAAKN,MAAMC,YAE3B,GADAe,QAAQC,IAAIF,GACS,KAAjBA,EAAQpB,KAAa,CACvB,IAAMuB,EAAQ,sBAAOZ,KAAKN,MAAMT,OAAlB,CAAyBwB,IACvCT,KAAKC,SAAS,CACZhB,MAAO2B,EACPjB,YAAa,CACXN,KAAM,GACNG,IAAK,S,oBAMb,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,mCACE,2CACA,uBAAMyB,GAAG,aAAaC,SAAUd,KAAKF,QAArC,UACE,uBACEiB,KAAK,OACLC,YAAY,aACZb,MAAOH,KAAKN,MAAMC,YAAYN,KAC9B4B,SAAUjB,KAAKJ,cAEjB,wBAAQmB,KAAK,SAAb,uBAGJ,cAAC,EAAD,CACE9B,MAAOe,KAAKN,MAAMT,MAClBM,WAAYS,KAAKT,oB,GAhET2B,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61a494ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ListItems.css\";\r\n\r\nfunction ListItems(props) {\r\n  const items = props.items;\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div className=\"list\" key={item.key}>\r\n        <p>\r\n          {item.text}\r\n          <span>\r\n            <button onClick={() => props.deleteItem(item.key)}>X</button>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div>{listItems}</div>;\r\n}\r\nexport default ListItems;\r\n","import React from 'react';\nimport \"./App.css\";\nimport \"./ListItems\";\nimport ListItems from \"./ListItems\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\",\n      },\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    });\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter((item) => item.key !== key);\n    this.setState({\n      items: filteredItems,\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if (newItem.text !== \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n          key: \"\",\n        },\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>ToDo-List</h1>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n            <button type=\"Submit\">Add</button>\n          </form>\n        </header>\n        <ListItems\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n        ></ListItems>\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}